<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zy.out.dao.OutMapper">
	<resultMap id="BaseResultMap" type="com.zy.out.entities.Out">
		<id column="ID" property="id" jdbcType="DECIMAL" />
		<result column="OUT_ID" property="outId" jdbcType="VARCHAR" />
		<result column="IN_ID" property="inId" jdbcType="VARCHAR" />
		<result column="CAR_ID" property="carId" jdbcType="VARCHAR" />
		<result column="CAR_COUNT" property="carCount" jdbcType="DECIMAL" />
		<result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
		<result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
		<result column="STATE" property="state" jdbcType="DECIMAL" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, OUT_ID, IN_ID, CAR_ID, CAR_COUNT,
		CREATE_DATE,STATE,UPDATE_DATE
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from T_OUT
		where ID = #{id,jdbcType=DECIMAL}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from T_OUT
		where ID = #{id,jdbcType=DECIMAL}
	</delete>
	<insert id="insert" parameterType="com.zy.out.entities.Out">
		insert into T_OUT (ID, OUT_ID,
		IN_ID,
		CAR_ID, CAR_COUNT, CREATE_DATE
		)
		values (#{id,jdbcType=DECIMAL},
		#{outId,jdbcType=VARCHAR},
		#{inId,jdbcType=VARCHAR},
		#{carId,jdbcType=VARCHAR}, #{carCount,jdbcType=DECIMAL},
		#{createDate,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.zy.out.entities.Out">
		insert into T_OUT
		<trim prefix="(" suffix=")" suffixOverrides=",">
			
				ID,
		
			<if test="outId != null">
				OUT_ID,
			</if>
			<if test="inId != null">
				IN_ID,
			</if>
			<if test="carId != null">
				CAR_ID,
			</if>
			<if test="carCount != null">
				CAR_COUNT,
			</if>
			
				CREATE_DATE,
			
			<if test="updateDate != null">
				UPDATE_DATE,
			</if>
			<if test="state != null">
				STATE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			SEQ_T_OUT.NEXTVAL,
			<if test="outId != null">
				#{outId,jdbcType=VARCHAR},
			</if>
			<if test="inId != null">
				#{inId,jdbcType=VARCHAR},
			</if>
			<if test="carId != null">
				#{carId,jdbcType=VARCHAR},
			</if>
			<if test="carCount != null">
				#{carCount,jdbcType=DECIMAL},
			</if>
			sysdate,
			<if test="updateDate != null">
				#{updateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				#{state,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.zy.out.entities.Out">
		update T_OUT
		<set>
			<if test="outId != null">
				OUT_ID = #{outId,jdbcType=VARCHAR},
			</if>
			<if test="inId != null">
				IN_ID = #{inId,jdbcType=VARCHAR},
			</if>
			<if test="carId != null">
				CAR_ID = #{carId,jdbcType=VARCHAR},
			</if>
			<if test="carCount != null">
				CAR_COUNT = #{carCount,jdbcType=DECIMAL},
			</if>
			<if test="createDate != null">
				CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				STATE = #{state,jdbcType=TIMESTAMP},
			</if>
		</set>
		where ID = #{id,jdbcType=DECIMAL}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zy.out.entities.Out">
		update T_OUT
		set
		OUT_ID = #{outId,jdbcType=VARCHAR},
		IN_ID = #{inId,jdbcType=VARCHAR},
		CAR_ID = #{carId,jdbcType=VARCHAR},
		CAR_COUNT =
		#{carCount,jdbcType=DECIMAL},
		CREATE_DATE =
		#{createDate,jdbcType=TIMESTAMP}
		where ID = #{id,jdbcType=DECIMAL}
	</update>
	<update id="check" parameterType="com.zy.out.entities.Out">
		update T_OUT
		set
		state = 3,
		update_date = sysdate
		where ID = #{id,jdbcType=DECIMAL}
	</update>
	
	  <select id="getTotal" resultType="INTEGER">
		select
		count(*)
		from (
		select * from t_out
		<where>
			<if test="outId!=null and outId != ''">
				AND OUT_ID like '%' || #{outId,jdbcType=VARCHAR} || '%'
			</if>
			
		</where>
		)
	</select>
	<select id="queryAll" resultMap="BaseResultMap">
		SELECT * FROM
		(
		SELECT A.*, rownum r
		FROM
		(select * from T_OUT
		<where>
			<if test="outId!=null and outId != ''">
				AND OUT_ID like '%' || #{outId,jdbcType=VARCHAR} || '%'
			</if>

		</where>
		)A
		WHERE rownum &lt;= #{end,jdbcType=DECIMAL}
		) B
		WHERE r &gt;#{start,jdbcType=DECIMAL} order by CREATE_DATE DESC
	</select>
</mapper>